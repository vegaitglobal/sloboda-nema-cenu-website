@use '../base/icon-font' as *;
@use 'breakpoints' as *;
@use 'sass:math';

//	Visually hidden mixin for accessibility
@mixin visually-hidden() {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

// Hover mixin only for desktop devices
// to include use @include hover {your hover styles} can also include elements
@mixin hover {
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      @content;
    }
  }
}

// Focus mixin - focus state visible only when tabbing is active
// to include use @include focus {your focus styles} can also include elements
@mixin focus {
  @media only screen and (min-width: 1200px) {
    .active-focus &:focus {
      @content;
    }
  }
}

// ----------  Fonts import
// ------------------------------------------------------------------------------

// usage: @include webFont(Helvetica, HelveticaNeueLTStd-Th, 100);
// in mixin call add three parameters (font name, font file name, font-weight, [font-style])
$path: '../assets/fonts' !default;

@mixin webFont($name, $file, $weight, $style: 'normal') {
  @font-face {
    font-family: '#{$name}';
    src: url('#{$path}/#{$file}.woff2') format('woff2'),
      url('#{$path}/#{$file}.woff') format('woff'),
      url('#{$path}/#{$file}.ttf') format('truetype');
    font-weight: #{$weight};
    font-style: normal;
    @if ($style != 'normal') {
      font-style: #{$style};
    } @else {
      font-style: normal;
    }
  }
}

// ----------  Iconfont mixin
// ------------------------------------------------------------------------------
// usage @include icon(tv, after) {your css properties}
// in a mixin call add only icon name WITHOUT ico prefix and add before/after for pseudo element

@mixin icon($name: download, $pseudo: before) {
  &::#{$pseudo} {
    @include font-styles;
    content: font-char('ico-#{$name}');
    @content;
  }
}

// usage:
// @include fluid-grid(font-size, 32px, 44px, 56px);

// all four parametars are mandatory
// the first value represents the css property (single css usage only)
// the second one is a value from mobile design
// the third one is a value from tablet design
// the fourth one is a value from desktop design

// exaple of using fluid-grid mixin

// .rte h1,
// .h1 {
// 	@include fluid-grid(font-size, 32px, 44px, 56px);
// }

@mixin fluid-grid($property, $mobile, $tablet, $desktop) {
  #{$property}: #{$mobile};
  @include media-breakpoint-up(xl) {
    #{$property}: fluid($tablet, $desktop);
  }
  @if ($mobile != $tablet) {
    @include media-breakpoint-between(md, lg) {
      #{$property}: #{$tablet};
    }
  }
}
